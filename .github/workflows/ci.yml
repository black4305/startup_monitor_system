name: 🤖 CI/CD Pipeline - Startup Monitor System

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🧪 기본 테스트
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4

    - name: 🐍 Python 3.10 설정
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: 🔧 기본 의존성 설치
      run: |
        python -m pip install --upgrade pip
        pip install flask flask-cors python-dotenv requests beautifulsoup4

    - name: 🧪 기본 임포트 테스트
      run: |
        python -c "print('✅ Python 환경 정상')"
        python -c "import flask; print('✅ Flask 정상')"
        python -c "import sys; sys.path.insert(0, '.'); print('✅ 프로젝트 경로 설정 완료')"

  # 🐳 Docker 이미지 빌드
  docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4

    - name: 🐳 Docker Buildx 설정
      uses: docker/setup-buildx-action@v3

    - name: 🔐 Docker Hub 로그인
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Docker 이미지 빌드 및 푸시
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.DOCKER_USERNAME }}/startup-monitor-system:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
